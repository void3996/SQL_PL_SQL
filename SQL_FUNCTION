1. 문자 함수

1. 대소문자 변환함수

LOWER(char) 문자열을 소문자로 변환

UPPER(char) 문자열을 대문자로 변환

INITCAP(char) 주어진 문자열의 첫 번째 문자를 대문자로 나머지 문자는 소문자로 변환



SELECT e_player_name, UPPER(e_player_name), LOWER(e_player_name), INITCAP(e_player_name)

FROM player_t

WHERE player_name LIKE '가%';

 



2. 문자열의 일부분만 추출하는 함수

SUBSTR(대상, 추출시작위치, 개수)

 

SELECT e_player_name, substr(e_player_name,3,4)

FROM PLAYER_T

WHERE player_name LIKE '가%';



SELECT e_player_name, substr(e_player_name,3)

FROM PLAYER_T

WHERE player_name LIKE '가%';

--e_player_name의 3번째 문자부터 끝까지 모두 가져옴

 

*substr/substrb와 length/lengthb

SELECT e_player_name, substr(e_player_name,1,4), substrb(e_player_name,1,4)

FROM PLAYER_T

WHERE player_name='가이모토';

--한글인 경우 substr/substrb 함수 적용 결과값이 다름

 

SELECT e_player_name, length(player_name), lengthb(player_name)

FROM PLAYER_T

WHERE player_name='가이모토';



 

3. 특정 자릿수만큼 채워서 표시할 때

LPAD(대상, 확보할 크기, 남은공간 채울 문자), 

RPAD(대상, 확보할 크기, 남은공간 채울 문자)



SELECT RPAD(sal, 8, '0') 

FROM emp;



SELECT LPAD(sal, 8, '0') 

FROM emp;



 

4. 왼쪽끝/ 오른쪽 끝에 나오는 특정문자(또는 공백) 제거

LTRIM(대상, 제거할 문자)

RTRIM(대상, 제거할 문자)

*제거할 문자가 연속된다면 모두 제거된다.



SELECT LTRIM(ename, 'A') FROM emp;

SELECT RTRIM(ename, 'T') FROM emp;



*양쪽 끝에 나오는 지정된 문자 제거 시

SELECT ename, TRIM('T' from ename) 

FROM emp;



 

5. 특정 문자열을 다른 문자열로 변경할 때

replace(대상, 찾을 문자열, 변경할 문자열)



REPLACE(ename, ‘SC’, ‘*?’) from emp;

 

*비교> select ename, TRANSLATE(ename, ‘SC’, ‘*?’);



TRANSLATE(ename, ‘SC’, ‘*?’) from emp;

※TRANSLATE는 각각 한글자씩만 대응가능하다.



 

6. 지정한 문자가 어느 위치에 나오는지 알려주는 함수

INSTR(대상, 찾을 문자열, 검색시작위치, 횟수)



SELECT ename, INSTR(ename,'A',1,1)

FROM emp;

    SMITH   --> 0

    ADAMS   --> 1

    WARD    --> 2

 

SELECT ename, INSTR(ename,'A',1,2)

FROM emp;

    SMITH   --> 0

    ADAMS   --> 3

    WARD    --> 0

 

player_t 선수 중 이름 1글자, 3글자 아닌 선수들의 이름을 아래 형태로 나오도록 조회하기

(이름첫글자--두번째글자부터 남은글자)



SELECT SUBSTR(player_name,1,1)||'--'||SUBSTR(player_name,2)

FROM player_t

WHERE length(player_name) NOT IN (1,3);

 



7. 특정 문자의 ASCII 코드 값을 반환하는 함수

SELECT ASCII(char) 

FROM dual;

 

SELECT ASCII('a') 소문자, ASCII('A') 대문자 FROM dual;



1.1 INITCAP() 함수
- 영어에서 첫 글자만 대문자로 출력하고 나머지는 전부 소문자로 출력하는 함수
- INITCAP(문자열 또는 컬럼명)

- emp 테이블에서 ename과 첫 글자만 대문자로 바꾼 ename을 출력
TESTDB>SELECT ename, INITCAP(ename) "INTICAP"
  2  FROM emp
  3  WHERE deptno = 10;

ENAME                INTICAP
-------------------- --------------------
CLARK                Clark
KING                 King
MILLER               Miller

- 공백이 있을경우 공백 다음을 첫 글자로 대문자 출력
TESTDB>SELECT name, INITCAP(name) "INITCAP"
  2  FROM professor
  3  WHERE deptno = 101;

NAME                                     INITCAP
---------------------------------------- ----------------------------------------
Audie Murphy                             Audie Murphy
Angela Bassett                           Angela Bassett
Jessica Lange                            Jessica Lange

1.2 LOWER() 함수
 - 함수에 입력되는 값을 전부 소문자로 변경하여 출력
 - LOWER(문자열 또는 컬럼명)

1.3 UPPER() 함수
 - 입력되는 값을 전부 대문자로 변경하여 출력
 - UPPER(문자열 또는 컬럼명)
 
TESTDB>SELECT ename, LOWER(ename) "LOWER", UPPER(ename) "UPPER"
  2  FROM emp
  3  WHERE deptno = 10;

ENAME                LOWER                UPPER
-------------------- -------------------- --------------------
CLARK                clark                CLARK
KING                 king                 KING
MILLER               miller               MILLER

1.4 LENGTH / LENGTHB 함수
 - 입력된 문자열의 길이(바이트 수)를 계산해주는 함수
 - LENGTH(컬럼 또는 문자열)
 - LENGTHB(컬럼 또는 문자열)
 
TESTDB>SELECT ename, LENGTH(ename) "LENGTH", LENGTHB(ename) "LENGTHB"
  2  FROM emp
  3  WHERE deptno = 20;

ENAME                    LENGTH    LENGTHB
-------------------- ---------- ----------
SMITH                         5          5
JONES                         5          5
SCOTT                         5          5
FORD                          4          4

- 회원 가입을 받을 때 사용자가 입력한 글자 수를 확인할때 사용 가능

- 사용자로부터 ename을 입력받은 후 그보다 많은 글자 수를 가진 이름을 출력
TESTDB>SELECT ename, LENGTH(ename)
  2  FROM emp
  3  WHERE LENGTH(ename) > LENGTH('&ename');
Enter value for ename: smith
old   3: WHERE LENGTH(ename) > LENGTH('&ename')
new   3: WHERE LENGTH(ename) > LENGTH('smith')

ENAME                LENGTH(ENAME)
-------------------- -------------
MARTIN                           6
TURNER                           6
MILLER                           6

1.5 CONCAT() 함수(|| 연산자와 동일한 기능)
- CONCAT('문자열1', '문자열2')

TESTDB> SELECT CONCAT(ename, job)
  2  FROM emp
  3  WHERE deptno=10;

CONCAT(ENAME,JOB)
--------------------------------------
CLARKMANAGER
KINGPRESIDENT
MILLERCLERK

1.6 SUBSTR() 함수
- SUBSTR('문자열' 또는 컬럼명, 1,4)
- 주어진 문자열에서 특정 길이의 문자만 골라낼 때 사용하는 함수

TESTDB>SELECT SUBSTR('abcde', 3, 2) "3,2",
  2           SUBSTR('abcde', -3,2) "-3,2",
  3           SUBSTR('abcde', -3,4) "-3,4"
  4  FROM dual;

3,2  -3,2 -3,4
---- ---- ------
cd   cd   cde

- Student 테이블에서 jumin 컬럼을 사용해서 1전공이 101번인 학생들의 이름과 태어난 월일, 생일 하루전 날짜를 출력
TESTDB>SELECT name, SUBSTR(jumin, 3,4) "Birthday",
  2                     SUBSTR(jumin, 3,4) -1 "Birthday -1"
  3  FROM student
  4  WHERE deptno1 = 101;

NAME                                                         Birthday                         Birthday -1
------------------------------------------------------------ -------------------------------- -----------
James Seo                                                    1023                                    1022
Billy Crystal                                                0123                                     122
Richard Dreyfus                                              1129                                    1128
Danny Devito                                                 0819                                     818

1.7 SUBSTRB() 함수
 - SUBSTR 함수와 문법은 동일하며 차이점은 추출할 자릿수가 아니라 추출할 바이트 수를 지정하는 것
 
 
TESTDB>SELECT '서진수' "NAME" , SUBSTR('서진수', 1,2) "SUBSTR",
 2                             SUBSTRB('서진수', 1,2) "SUBSTRB"
 3  FROM dual;

NAME               SUBSTR       SUBS
------------------ ------------ ----
서진수             서진

1.8 INSTR() 함수
 - 주어진 문자열이나 컬럼에서 특정 글자의 위치를 찾아주는 함수
 - INSTR('문자열' 또는 컬럼, 찾는 글자, 시작 위치, 몇 번째인지(기본값은 1)
 
 - 주어진 문자열에서 첫 번째 문자를 기준으로 3번째 '-(마이너스)' 가 나오는 위치의 값을 출력
TESTDB>SELECT 'A-B-C-D' , INSTR('A-B-C-D', '-',1,3) "INSTR"
  2  FROM dual;

'A-B-C-D'           INSTR
-------------- ----------
A-B-C-D                 6

 - 주어진 문자열에서 세 번째 문자를 기준으로 첫번째 '-(마이너스)' 가 나오는 위치의 값을 출력
TESTDB>SELECT 'A-B-C-D' , INSTR('A-B-C-D','-',3,1) "INSTR"
  2  FROM dual;

'A-B-C-D'           INSTR
-------------- ----------
A-B-C-D                 4

 - 주어진 문자열에서 오른쪽에서 첫 번째 문자를 기준으로 세번째 '-(마이너스)'가 나오는 위치의 값을 출력
TESTDB>SELECT 'A-B-C-D', INSTR('A-B-C-D', '-', -1,3) "INSTR"
  2  FROM dual;

'A-B-C-D'           INSTR
-------------- ----------
A-B-C-D                 2

TESTDB>SELECT 'A-B-C-D' , INSTR('A-B-C-D','-', -6,2) "INSTR"
  2  FROM dual;

'A-B-C-D'           INSTR
-------------- ----------
A-B-C-D                 0

- Student 테이블의 tel 컬럼을 사용하여 1 전공번호(deptno1)가 201번인 학생의 이름과 전화번호,')'가 나오는 위치를 출력하세요
TESTDB>SELECT name, tel, INSTR(tel, ')')
  2  FROM student
  3  WHERE deptno1 = 201;

NAME                                                         TEL                            INSTR(TEL,')')
------------------------------------------------------------ ------------------------------ --------------
Demi Moore                                                   02)6255-9875                                3
Macaulay Culkin                                              02)312-9838                                 3
Wesley Snipes                                                053)736-4981                                4
Steve Martin                                                 02)6175-3945                                3
Sean Connery                                                 02)381-5440                                 3
Christian Slater                                             031)345-5677                                4

6 rows selected.

 - Student 테이블에서 1 전공이 101번인 학생들의 tel 컬럼을 조회하여 3이 첫번째로 나오는 위치를 이름과 전화번호와 함께 출력하세요.
 TESTDB>SELECT name, tel, INSTR(tel,'3')
  2  FROM student
  3  WHERE deptno1 = 101;

NAME                                                         TEL                            INSTR(TEL,'3')
------------------------------------------------------------ ------------------------------ --------------
James Seo                                                    055)381-2158                                5
Billy Crystal                                                055)333-6328                                5
Richard Dreyfus                                              02)6788-4861                                0
Danny Devito                                                 055)278-3649                                9
 
1.9 LPAD() 함수
 - LAPD('문자열' 또는 컬럼명,자릿수, '채울 문자')
 
  - student 테이블에서 1전공이 201번인 학과 학생들의 id를 총 10자리로 출력하되 왼쪽 빈자 '*' 기호로 채우기
 TESTDB>SELECT name, id, LPAD(id,10,'*')
  2  FROM student
  3  WHERE deptno1 = 201;

NAME                 ID         LPAD(ID,10,'*')
-------------------- ---------- --------------------
Demi Moore           Moore      *****Moore
Macaulay Culkin      Culkin     ****Culkin
Wesley Snipes        Snipes     ****Snipes
Steve Martin         Martin     ****Martin
Sean Connery         Connery    ***Connery
Christian Slater     Slater     ****Slater

6 rows selected.

1.10 RPAD() 함수
 - RPAD('문자열' 또는 컬럼명, 자릿수, '채울 문자')
 
 - emp 테이브렝서 deptno가 10번인 사원들의 ename을 10자리로 출력하되 오른쪽 빈자리에는 '~'로 채우기
 TESTDB>SELECT RPAD(ename, 10, '~') "RPAD"
  2  FROM emp
  3  WHERE deptno = 10;

RPAD
--------------------------------------------------------------------------------
CLARK~~~~~
KING~~~~~~
MILLER~~~~
 
1.11 LTRIM() 함수
 - LTRIM('문자열' 또는 컬럼명, 자릿수, '제거할 문자'
 
 - emp 테이블에서 ename이 'C'로 시작하는 사람의 이름에서 'C'를 제거하고 출력
 TESTDB>SELECT ename FROM emp
  2  WHERE deptno = 10;

ENAME
--------------------
CLARK
KING
MILLER

TESTDB>SELECT LTRIM(ename, 'C')
  2  FROM emp
  3  WHERE deptno = 10;

LTRIM(ENAME,'C')
--------------------
LARK
KING
MILLER

1.2 RTRIM() 함수
 - RTRIM('문자열' 또는 컬럼명, '제거할 문자')
 
 - emp 테이블의 ename에서 마지막 글자가 'R'이 있을 경우 제거
 TESTDB>SELECT ename, RTRIM(ename, 'R') "RTRIM"
  2  FROM emp
  3  WHERE deptno = 10;

ENAME                RTRIM
-------------------- --------------------
CLARK                CLARK
KING                 KING
MILLER               MILLE

1.13 REPLACE() 함수
 - REPLACE('문자열' 또는 컬렴명, '문자1', '문자2')
 
 - emp 테이블에서 이름의 처음 두 글자를 *로 출력
 TESTDB>SELECT ename, REPLACE(ename, SUBSTR(ename, 1,2),'**') "REPLACE"
  2  FROM emp
  3  WHERE deptno = 10;

ENAME                REPLACE
-------------------- ----------------------------------------
CLARK                **ARK
KING                 **NG
MILLER               **LLER

2. 숫자 관련 함수
ROUND 주어진 숫자를 반올림한 후 출력함 ROUND(12.345,2) → 12.35
TRUNC 주어진 숫자를 버림한 후 출력함 TRUNC(12.345,2) → 12.34
MOD 주어진 숫자를 나눈 후 나머지 값을 출력함 MOD(12,10) → 2
CEIL 주어진 숫자와 가장 근접한 큰 정수를 출력함 CEIL(12.345) → 13F
FLOOR 주어진 숫자와 가장 근접한 작은 정수를 출력함 FLOOR(12.345) → 12
POWER 주어진 숫자 1의 숫자 2승을 출력함 POWER(3,2) → 9

2.1 ROUND() 함수
 - ROUND(숫자, 출력을 원하는 자릿수)
 
 TESTDB>SELECT ROUND(987.654,2) "ROUND1",
  2     ROUND(987.654,0) "ROUND2",
  3     ROUND(987.654,-1) "ROUND3"
  4  FROM DUAL;

    ROUND1     ROUND2     ROUND3
---------- ---------- ----------
    987.65        988        990
    
2.2 TRUNC() 함수
 - TRUNC(숫자, 원하는 자릿수)
     
TESTDB>SELECT TRUNC(987.654,2) "TRUNC1",
  2     TRUNC(987.654,0) "TRUNC2",
  3     TRUNC(987.654,-1) "TRUNC3"
  4  FROM DUAL;

    TRUNC1     TRUNC2     TRUNC3
---------- ---------- ----------
    987.65        987        980    

2.3 MOD(), CEIL(), FLOOR() 함수

TESTDB>SELECT MOD(121, 10) "MOD",
  2     CEIL(123.45) "CEIL",
  3     FLOOR(123.45) "FLOOR"
  4  FROM dual;

       MOD       CEIL      FLOOR
---------- ---------- ----------
         1        124        123
         
 - emp 테이블의 13건의 데이터를 출력하되 3줄씩 나누어서 한 조로 만드는 예
 
 TESTDB>SELECT rownum "ROWNO", CEIL(rownum/3) "TEAMNO", ename
  2  FROM emp;

     ROWNO     TEAMNO ENAME
---------- ---------- --------------------
         1          1 SMITH
         2          1 ALLEN
         3          1 WARD
         4          2 JONES
         5          2 MARTIN
         6          2 BLAKE
         7          3 CLARK
         8          3 SCOTT
         9          3 KING
        10          4 TURNER
        11          4 JAMES
        12          4 FORD
        13          5 MILLER

13 rows selected.

 rownum은 출력 될 때 줄 번호. 줄 번호/3 해서 나온 값과 가장 가까운 큰 정수를 조 번호로 출력한 것
 
2.4 POWER() 함수
 - POWER(숫자1, 숫자2)
 
 TESTDB>SELECT POWER(2,3)
  2  FROM dual;

POWER(2,3)
----------
         8
         
3. 날짜 관련 함수들

함수명    의미                   결과
SYSDATE 시스템의 현재 날짜와 시간 날짜
MONTHS_BETWEEN 두 날짜 사이의 개월수 숫자
ADD_MONTHS 주어진 날짜에 개월을 더함 날짜
NEXT_DAY 주어진 날짜를 기준으로 돌아오는 날짜 출력 날짜
LAST_DAY 주어진 날짜가 속한 달의 마지막 날짜 출력  날짜
ROUND 주어진 날짜를 반올림 날짜
TRUNC 주어진 날짜를 버림 날짜

3.1 SYSDATE 함수

TESTDB>SELECT SYSDATE FROM dual;

SYSDATE
--------
21/01/17

TESTDB>ALTER SESSION SET NLS_DATE_FORMAT = 'RRRR-MM-DD:HH24:MI:SS';

Session altered.

TESTDB>SELECT SYSDATE FROM dual;

SYSDATE
-------------------
2021-01-17:21:18:43

3.2 MONTHS_BETWEEN 함수
TESTDB>SELECT MONTHS_BETWEEN('14/09/30','14/08/31')
  2  FROM dual;

MONTHS_BETWEEN('14/09/30','14/08/31')
-------------------------------------
                                    1
                                    
TESTDB>SELECT MONTHS_BETWEEN('21/02/05','21/01/17')
  2  FROM dual;

MONTHS_BETWEEN('21/02/05','21/01/17')
-------------------------------------
                           .612903226
                           
 - 두 날짜 중 큰 날짜를 먼저 써야 양수가 나옵니다.                            
 
 TESTDB>SELECT MONTHS_BETWEEN('21/01/17','21/02/05')
  2  FROM dual;

MONTHS_BETWEEN('21/01/17','21/02/05')
-------------------------------------
                           -.61290323
                           
 - 두 날짜가 같은 달에 속해 있으면 특정 규칙으로 계산된 값이 나옵니다.(같은 1개월이라도 29일,30일,31일의 경우마다 모두 결과값이 다름)
 
 TESTDB>SELECT MONTHS_BETWEEN('12/02/29','12/02/01')
  2  FROM dual;

 - 1개월이 29일(윤달)인 2012년 2월을 조회
MONTHS_BETWEEN('12/02/29','12/02/01')
-------------------------------------
                           .903225806
 
 - 1개월이 30일인 2014년 4월을 조회
TESTDB>SELECT MONTHS_BETWEEN('14/04/30','14/04/01')
  2  FROM dual;

MONTHS_BETWEEN('14/04/30','14/04/01')
-------------------------------------
                           .935483871
 
 - 1개월이 31일인 2014년 5월을 조회
 TESTDB>SELECT MONTHS_BETWEEN('14/05/31', '14/05/01')
  2  FROM dual;

MONTHS_BETWEEN('14/05/31','14/05/01')
-------------------------------------
                           .967741935

 -  2월 28일까지 있는 달과 29일(윤일)까지 있는 달은 구분하지 못함
 
 TESTDB>SELECT MONTHS_BETWEEN('12/03/01', '12/02/28')
  2  FROM dual;

MONTHS_BETWEEN('12/03/01','12/02/28')
-------------------------------------
                           .129032258

TESTDB>select months_between('14/03/01','14/02/28')
  2  FROM dual;

MONTHS_BETWEEN('14/03/01','14/02/28')
-------------------------------------
                           .129032258

3.3 ADD_MONTHS() 함수
 
  - 주어진 날짜에 숫자만큼의 달을 추가하는 함수
  
  TESTDB>SELECT SYSDATE, ADD_MONTHS(SYSDATE,1)
  2  FROM dual;

SYSDATE  ADD_MONT
-------- --------
21/02/25 21/03/25

3.4 NEXT_DAY() 함수
 - 주어진 날짜를 기준으로 돌아오는 가장 최근 요일의 날짜를 반환해주는 함수
 
TESTDB>SELECT SYSDATE, NEXT_DAY(SYSDATE,'mon') from daul;
SELECT SYSDATE, NEXT_DAY(SYSDATE,'mon') from daul
                                             *
ERROR at line 1:
ORA-00942: table or view does not exist

3.5 LAST_DAY() 함수
 - 주어진 날짜가 속한 달의 가장 마지막 날을 출력해주는 함수
  TESTDB>SELECT SYSDATE, LAST_DAY(SYSDATE), LAST_DAY('14/05/01')
  2  FROM dual;

SYSDATE  LAST_DAY LAST_DAY
-------- -------- --------
21/02/25 21/02/28 14/05/31

3.6 날짜의 ROUND(), TRUNC() 함수
 - 날짜의 ROUND()는 하루의 반에 해당되는 시간은 낮(정오) 12:00:00인데, 주어진 날짜가 이 시간을 넘어설 경우에 다음 날짜로 출력하고 이 시간이 안 될 경우에는 당일로 출력한다
 - 날짜의 TRUNC 함수는 무조건 당일로 출력
 
 TESTDB>SELECT SYSDATE, ROUND(SYSDATE),TRUNC(SYSDATE)
  2  FROM dual;

SYSDATE             ROUND(SYSDATE)      TRUNC(SYSDATE)
------------------- ------------------- -------------------
2021-02-25:22:13:13 2021-02-26:00:00:00 2021-02-25:00:00:00

4. 형 변환 함수

CHAR(n` )
